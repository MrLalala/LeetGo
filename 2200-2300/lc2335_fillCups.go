package main

import "sort"

func fillCups(amount []int) int {
	sort.Ints(amount)
	// 尽可能的将多的和少的均摊
	// 设排完序后的大小关系为 a, b, c
	// 1. 如果 c >= a + b, (1,2,3) -> (1+1) + (2+2) -> 3
	// 2. 如果 c <  a + b, (2,3,4) -> (2+2) + (2+2)+1 -> 5
	//                     (3,4,5) -> (1+1)+2 + (4+4) -> 7
	//                     (3,4,5) -> (3+3) + (2+2)+2 -> 7
	//                     (3,4,5) 先合并1,2  --> (2,3,5) -> (2+2) + (3+3) -> 5+1 = 6
	//    所以最优的合并结果是: c + (a - (c - (b - a)) / 2), 主要是怎么在均分 c 之后, 让 剩余的a,b之间差值最小, 可以二次均分
	//    a < b < c & a+b > c -> a > c-b -> 2a > c-b+a -> a > (c-b+a)/2
	//    3, 99, 100 -> (2+2) + (98+98) + (1+1) -> 101
	if amount[2] > amount[1]+amount[0] {
		return amount[2]
	}
	return (amount[0] + amount[1] + amount[2] + 1) / 2
}
